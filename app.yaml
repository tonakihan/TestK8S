---
apiVersion: v1
kind: Namespace
metadata:
  name: api
  labels:
    name: api
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: api
  name: deployment-app1-configmap
data:
  index.html: |
    <h1>Hay! Welcome to the NGINX on k8s</h1>
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: api
  name: deployment-app2-configmap
data:
  index.html: |
    <h1>Hay! Welcome to the NGINX on k8s. Another page</h1>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: api
  name: app1-deployment
  labels:
    app: app1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: app1-deployment
        image: nginx
        #ports:
          #- containerPort: 3000
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
      - name: config
        configMap:
          name: deployment-app1-configmap

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: api
  name: app2-deployment
  labels:
    app: app2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      - name: app2-deployment
        image: nginx
        #ports:
          #- containerPort: 3000
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
      - name: config
        configMap:
          name: deployment-app2-configmap
---
apiVersion: v1
kind: Service
metadata:
  namespace: api
  name: app1-deployment
spec:
  selector:
    app: app1
  #type: NodePort
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    #nodePort: 30020
---
apiVersion: v1
kind: Service
metadata:
  namespace: api
  name: app2-deployment
spec:
  #type: NodePort
  type: ClusterIP
  selector:
    app: app2
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    #nodePort: 30030
